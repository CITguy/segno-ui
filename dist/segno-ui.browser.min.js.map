{"version":3,"file":"segno-ui.browser.min.js","sources":["../src/segno/keys.js","../src/segno/DSElement.js","../src/segno/DSBusyElement.js","../src/segno/DSDisclosureElement.js","../src/segno/DSIconElement.js","../src/segno/DSProgressElement.js","../src/segno/DSRevealElement.js","../src/segno/DSTabElement.js","../src/segno/DSTabcontentElement.js","../src/segno/DSTablistElement.js","../src/segno/DSTabpanelElement.js","../src/segno/DSTabsetElement.js","../src/segno/index.js","../src/browser-entry.js"],"sourcesContent":["const KEYS = {\n    Alt: 18,\n    Backspace: 8,\n    Control: 17,\n    Delete: 46,\n    Down: 40,\n    End: 35,\n    Enter: 13,\n    Escape: 27,\n    Home: 36,\n    Insert: 45,\n    Left: 37,\n    PageDown: 34,\n    PageUp: 33,\n    Right: 39,\n    Shift: 16,\n    Space: 32,\n    Tab: 9,\n    Up: 38,\n};\n\n// ALIASES\nKEYS['Ctrl'] = KEYS['Control'];\nKEYS['Del'] = KEYS['Delete'];\nKEYS['Esc'] = KEYS['Escape'];\nKEYS['Ins'] = KEYS['Insert'];\nKEYS['Option'] = KEYS['Alt'];\nKEYS['PgDown'] = KEYS['PageDown'];\nKEYS['PgUp'] = KEYS['PageUp'];\nKEYS['Return'] = KEYS['Enter'];\n\nexport default KEYS;\n","import KEYS from './keys';\n\nexport class DSElement extends HTMLElement {\n    static $define () {\n        customElements.define(this.is, this);\n    }\n\n    constructor (tagName, template) {\n        super();\n\n        // Don't attach shadow DOM unless specified\n        if (tagName && template) {\n            this.attachShadow({mode: 'open'});\n\n            if (window.ShadyCSS) {\n                ShadyCSS.prepareTemplate(template, tagName);\n                ShadyCSS.styleElement(this);\n            }\n            this.shadowRoot.appendChild(template.content.cloneNode(true));\n        }\n    }\n\n    // See: https://goo.gl/MDp6j5\n    $upgradeProperty (prop) {\n        if (this.hasOwnProperty(prop)) {\n            let value = this[prop];\n            delete this[prop];\n            this[prop] = value;\n        }\n    }\n\n    // See: https://goo.gl/MUFHD8\n    $defaultAttribute (name, val) {\n        if (!this.hasAttribute(name)) {\n            this.setAttribute(name, val);\n        }\n    }\n\n    // Utility method to generate a unique ID\n    $generateId () {\n        return Math\n            .random()     // 0.7093288430261266\n            .toString(36) // \"0.pjag2nwxb2o\"\n            .substr(2,8); // \"pjag2nwx\"\n    }//$generateId()\n\n    $preventScroll (evt) {\n        switch (evt.keyCode) {\n            case KEYS.Down:\n            case KEYS.Left:\n            case KEYS.Right:\n            case KEYS.Space:\n            case KEYS.Up:\n                evt.preventDefault();\n            break;\n        }\n    }\n}\n","import { DSElement } from './DSElement';\n\nexport class DSBusyElement extends DSElement {\n    static get is () {\n        return 'ds-busy';\n    }\n\n    connectedCallback () {\n        this.$upgradeProperty('paused');\n    }\n\n    attachedCallback () {\n        this.setAttribute('aria-hidden', true);\n    }\n\n    get paused () {\n        return this.hasAttribute('paused');\n    }\n\n    set paused (val) {\n        if (Boolean(val)) {\n            this.setAttribute('paused', '');\n            this.dispatchEvent(new CustomEvent('pause', {\n                bubbles: true\n            }));\n        } else {\n            this.removeAttribute('paused');\n            this.dispatchEvent(new CustomEvent('start', {\n                bubbles: true\n            }));\n        }\n    }\n}\n","import KEYS from './keys';\nimport { DSElement } from './DSElement';\n\nexport class DSDisclosureElement extends DSElement {\n    static get is () {\n        return 'ds-disclosure';\n    }\n\n    static get observedAttributes () {\n        return [ \n            'aria-expanded',\n            'disabled',\n        ];\n    }\n\n    connectedCallback () {\n        this.$defaultAttribute('role', 'button');\n        this.setAttribute('tabindex', 0);\n\n        if (this.target) {\n            this.expanded = this.target.hasAttribute('open');\n        } else {\n            this.expanded = false;\n        }\n\n        this.addEventListener('click', this._toggle);\n        this.addEventListener('keydown', this.$preventScroll);\n        this.addEventListener('keyup', this._keyUp);\n    }\n\n    disconnectedCallback () {\n        this.removeEventListener('click', this._toggle);\n        this.removeEventListener('keydown', this.$preventScroll);\n        this.removeEventListener('keyup', this._keyUp);\n    }\n\n    attributeChangedCallback (attr, oldVal, newVal) {\n        switch(attr) {\n            case 'aria-expanded':\n                if (this.target) {\n                    this.target.open = (newVal === 'true');\n                }\n            break;\n\n            case 'disabled':\n                if (newVal !== null) {\n                    this.setAttribute('tabindex', -1);\n                } else {\n                    this.setAttribute('tabindex', 0);\n                }\n            break;\n        }\n    }\n\n    get expanded () {\n        return this.getAttribute('aria-expanded') === 'true';\n    }\n\n    set expanded (newVal) {\n        this.setAttribute('aria-expanded', !!newVal);\n    }\n\n    get target () {\n        if (!this._target) { // memoize target\n            let targetId = this.getAttribute('aria-controls');\n            this._target = document.getElementById(targetId);\n        }\n\n        return this._target;\n    }//target\n\n    get disabled () {\n        return this.hasAttribute('disabled');\n    }\n\n    set disabled (newVal) {\n        if (!!newVal) {\n            this.setAttribute('disabled', true);\n        } else {\n            this.removeAttribute('disabled');\n        }\n    }\n\n    _keyUp (evt) {\n        switch (evt.keyCode) {\n            case KEYS.Space:\n            case KEYS.Enter:\n                this._toggle();\n            break;\n\n            default: /* do nothing */ break;\n        }\n    }//_keyUp()\n\n    _toggle () {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }//_toggle();\n}\n","import { DSElement } from './DSElement';\nimport Icons from './icons';\n\nexport class DSIconElement extends DSElement {\n    static get is () {\n        return 'ds-icon';\n    }\n\n    static get icons () {\n        return Icons;\n    }\n\n    static get observedAttributes () {\n        return [ 'type' ];\n    }\n\n    constructor (type) {\n        super();\n\n        if (type) {\n            this.type = type;\n        }\n    }\n\n    connectedCallback () {\n        this.$upgradeProperty('type');\n        this.$defaultAttribute('aria-hidden', true);\n        this._render();\n    }\n\n    attributeChangedCallback () {\n        this._render();\n    }\n\n    get type () {\n        return this.getAttribute('type');\n    }\n\n    set type (newVal) {\n        this.setAttribute('type', newVal);\n    }\n\n    _render () {\n        // erase previously injected markup\n        this.innerHTML = '';\n        // add new SVG markup\n        if (this.type in Icons) {\n            const elSurrogate = document.createElement('div');\n            elSurrogate.innerHTML = Icons[this.type];\n            this.appendChild(elSurrogate.firstElementChild);\n        }\n    }\n}\n","import { DSElement } from './DSElement';\n\nconst _tagName = 'ds-progress';\nconst _template = document.createElement('template')\n\n_template.innerHTML = `\n    <style>\n        :host([indeterminate]) #fill {\n            width: 0 !important;\n        }\n\n        #fill {\n            background-color: currentColor;\n            box-sizing: border-box;\n            height: 100%;\n        }\n    </style>\n    <div id=\"fill\"></div>\n`;\n\nexport class DSProgressElement extends DSElement {\n    static get is () {\n        return _tagName;\n    }\n\n    static get observedAttributes () {\n        return ['value'];\n    }\n\n    constructor () {\n        super(_tagName, _template);\n\n        this.$fill = this.shadowRoot.getElementById('fill');\n        this.value = Number(this.getAttribute('value')) || 0;\n    }\n\n    connectedCallback () {\n        this.$upgradeProperty('indeterminate');\n        this.$upgradeProperty('value');\n    }\n\n    attributeChangedCallback (attrName, oldVal, newVal) {\n        this.value = Number(newVal);\n\n        this.$defaultAttribute('role', 'progressbar');\n        this.$defaultAttribute('aria-valuemin', 0);\n        this.$defaultAttribute('aria-valuemax', 100);\n    }\n\n    get value () {\n        return this._value;\n    }\n\n    set value (newVal) {\n        if (typeof newVal !== 'number') {\n            return;\n        }\n\n        let normVal = Number(newVal) || 0;\n        normVal = normVal > 100 ? 100 : normVal;\n        normVal = normVal < 0 ? 0 : normVal;\n        normVal = Math.round(normVal);\n\n        this.$fill.style.width = `${normVal}%`;\n        this.setAttribute('aria-valuenow', normVal);\n        this._value = normVal;\n    }\n\n    get indeterminate () {\n        return this.hasAttribute('indeterminate');\n    }\n\n    set indeterminate (newVal) {\n        if (Boolean(newVal)) {\n            this.setAttribute('indeterminate', true);\n        } else {\n            this.removeAttribute('indeterminate');\n        }\n    }\n}\n","import { DSElement } from './DSElement';\n\nexport class DSRevealElement extends DSElement {\n    static get is () {\n        return 'ds-reveal';\n    }\n\n    static get observedAttributes () {\n        return ['open'];\n    }\n\n    connectedCallback () {\n        this.$upgradeProperty('open');\n        this.setAttribute('aria-expanded', this.open);\n    }\n\n    attributeChangedCallback (attr, oldVal, newVal) {\n        this.setAttribute('aria-expanded', newVal === '')\n    }\n\n    set open (value) {\n        if (!!value) {\n            this.setAttribute('open', '');\n        } else {\n            this.removeAttribute('open');\n        }\n    }\n\n    get open () {\n        return this.hasAttribute('open');\n    }\n}\n","import { DSElement } from './DSElement';\n\nexport class DSTabElement extends DSElement {\n    static get is () {\n        return 'ds-tab';\n    }\n\n    connectedCallback () {\n        this.$upgradeProperty('current');\n        this.$defaultAttribute('role', 'tab');\n        this.setAttribute('aria-selected', this.current);\n    }\n\n    static get observedAttributes () {\n        return ['current'];\n    }\n\n    attributeChangedCallback (attr, oldVal, newVal) {\n        this.setAttribute('aria-selected', newVal !== null);\n    }\n\n    get current () {\n        return this.hasAttribute('current');\n    }\n\n    set current (newVal) {\n        if (newVal) {\n            this.setAttribute('current', true);\n        } else {\n            this.removeAttribute('current');\n        }\n    }\n}\n","import { DSElement } from './DSElement';\n\nexport class DSTabcontentElement extends DSElement {\n    static get is () {\n        return 'ds-tabcontent';\n    }\n\n    connectedCallback () {\n        this.$defaultAttribute('role', 'presentation');\n    }\n}\n","import { DSElement } from './DSElement';\n\nexport class DSTablistElement extends DSElement {\n    static get is () {\n        return 'ds-tablist';\n    }\n\n    connectedCallback () {\n        this.$defaultAttribute('role', 'tablist');\n    }\n}\n","import { DSRevealElement } from './DSRevealElement';\n\nexport class DSTabpanelElement extends DSRevealElement {\n    static get is () {\n        return 'ds-tabpanel';\n    }\n\n    connectedCallback () {\n        this.$upgradeProperty('open');\n        this.$defaultAttribute('role', 'tabpanel');\n        // initialize\n        this.setAttribute('aria-expanded', this.open);\n    }\n\n    attributeChangedCallback (attr, oldVal, newVal) {\n        let hasValue = (newVal !== null);\n        this.setAttribute('aria-expanded', hasValue);\n        this.setAttribute('tabindex', hasValue ? 0 : -1);\n    }\n}\n","import { DSElement } from './DSElement';\nimport KEYS from './keys';\n\nexport class DSTabsetElement extends DSElement {\n    static get is () {\n        return 'ds-tabset';\n    }\n\n    static get observedAttributes () {\n        return [\n            'current-tab',\n            'tab-side',\n        ];\n    }\n\n    constructor () {\n        super();\n        this.$tablist = this.querySelector('ds-tablist');\n\n        this._onKeyUp = this._onKeyUp.bind(this);\n        this._onTabClick = this._onTabClick.bind(this);\n    }//constructor()\n\n    connectedCallback () {\n        this.$upgradeProperty('current-tab');\n        this.$defaultAttribute('tab-side', 'top');\n\n        this._setupIds();\n        this.currentTab = Number(this.getAttribute('current-tab')) || 0;\n        this.$tablist.addEventListener('keyup', this._onKeyUp);\n        this.$tablist.addEventListener('keydown', this.$preventScroll);\n        this.tabs.forEach( (tab) => {\n            tab.addEventListener('click', this._onTabClick);\n        });\n    }//connectedCallback()\n\n    disconnectedCallback () {\n        this.$tablist.removeEventListener('keyup', this._onKeyUp);\n        this.$tablist.removeEventListener('keydown', this.$preventScroll);\n        this.tabs.forEach( (tab) => {\n            tab.removeEventListener('click', this._onTabClick);\n        });\n    }//disconnectedCallback()\n\n    attributeChangedCallback (attr, oldVal, newVal) {\n        switch (attr) {\n            case 'current-tab':\n                if (!isNaN(newVal)) {\n                    this.currentTab = Number(newVal);\n                }\n            break;\n\n            case 'tab-side':\n                switch (newVal) {\n                    case 'top':\n                    case 'bottom':\n                        this.$tablist.setAttribute('aria-orientation', 'horizontal');\n                    break;\n\n                    case 'left':\n                    case 'right':\n                        this.$tablist.setAttribute('aria-orientation', 'vertical');\n                    break;\n\n                    default: /* do nothing */ break;\n                }\n            break;//tab-side\n\n            default: /* do nothing */ break;\n        }//switch\n    }//attributeChangedCallback()\n\n    get currentTab () {\n        return this._currentTab || 0;\n    }\n\n    set currentTab (idx) {\n        if (isNaN(idx)) {\n            throw new TypeError(`'currentTab' expects an numeric index. Got ${typeof idx} instead.`);\n        }\n\n        if (idx < 0 || idx >= this.tabs.length) {\n            throw new RangeError(`'currentTab' index is out of bounds`);\n        }\n\n        this._currentTab = idx;\n\n        this.tabs.forEach( (tab, tabIdx) => {\n            if (idx === tabIdx) {\n                tab.current = true;\n                tab.setAttribute('tabindex', 0);\n            } else {\n                tab.current = false;\n                tab.setAttribute('tabindex', -1);\n                tab.blur();\n            }\n        });\n\n        this.tabpanels.forEach( (tabpanel, panelIdx) => {\n            tabpanel.open = (idx === panelIdx);\n        });\n    }//SET:currentTab\n\n    get tabSide () {\n        return this.getAttribute('tab-side');\n    }\n\n    set tabSide (newVal) {\n        this.setAttribute('tab-side', newVal);\n    }\n\n    get tabs () {\n        return Array.from(this.querySelectorAll('ds-tablist > ds-tab'));\n    }\n\n    get tabpanels () {\n        return Array.from(this.querySelectorAll('ds-tabpanel'));\n    }\n\n    _selectNext () {\n        // if current tab is the last tab\n        if (this.currentTab === (this.tabs.length - 1)) {\n            // select first\n            this.currentTab = 0;\n        } else {\n            // select next\n            this.currentTab += 1;\n        }\n        this.tabs[this.currentTab].focus();\n    }//_selectNext()\n\n    _selectPrevious () {\n        // if current tab is the first tab\n        if (this.currentTab === 0) {\n            // select last\n            this.currentTab = (this.tabs.length - 1);\n        } else {\n            // select previous\n            this.currentTab -= 1;\n        }\n        this.tabs[this.currentTab].focus();\n    }//_selectPrevious()\n\n    // Handle navigating the tabs via arrow keys\n    _onKeyUp (evt) {\n        switch (this.tabSide) {\n            case 'top':\n            case 'bottom':\n                if (evt.keyCode === KEYS.Right) {\n                    this._selectNext();\n                }\n\n                if (evt.keyCode === KEYS.Left) {\n                    this._selectPrevious();\n                }\n            break;\n\n            case 'left':\n            case 'right':\n                if (evt.keyCode === KEYS.Down) {\n                    this._selectNext();\n                }\n\n                if (evt.keyCode === KEYS.Up) {\n                    this._selectPrevious();\n                }\n            break;\n\n            default: /* do nothing */ break;\n        }//tabSide\n    }//_onKeyUp()\n\n    _onTabClick (evt) {\n        this.currentTab = this.tabs.indexOf(evt.target);\n    }\n\n    _setupIds () {\n        this.tabs.forEach( (tab, idx) => {\n            let tabpanel = this.tabpanels[idx];\n            // Default tab and panel ID\n            let tabId = `dsTab-${this.$generateId()}`;\n            let tabpanelId = `dsTabPanel-${this.$generateId()}`;\n\n            // Set or keep Tab ID\n            if (tab.hasAttribute('id')) {\n                tabId = tab.getAttribute('id');\n            } else {\n                tab.setAttribute('id', tabId);\n            }\n\n            // Set or keep Panel ID\n            if (tabpanel.hasAttribute('id')) {\n                tabpanelId = tabpanel.getAttribute('id');\n            } else {\n                tabpanel.setAttribute('id', tabpanelId);\n            }\n\n            tab.setAttribute('aria-controls', tabpanelId);\n            tabpanel.setAttribute('aria-labeledby', tabId);\n        });\n    }//_setupIds\n}\n","import { DSElement } from './DSElement';\n\nimport * as elements from './elements';\n\nfunction initialize () {\n    for (let attr in elements) {\n        elements[attr].$define();\n    }\n}\n\nexport default {\n    DSElement,\n    elements,\n    initialize,\n}\n","import Segno from './segno/index';\nimport { version as VERSION } from '../package.json';\n\nSegno.VERSION = VERSION;\n\n// Add Segno to global scope, if not already defined\nif (!window.Segno) {\n    window.Segno = Segno;\n}\n\n// If polyfills are used, initialize when polyfills are ready\n// otherwise, initialize immediately\nif (window.WebComponents) {\n    window.addEventListener('WebComponentsReady', function () {\n        Segno.initialize();\n    });\n} else {\n    Segno.initialize();\n}\n\n"],"names":["KEYS","DSElement","tagName","template","attachShadow","mode","window","ShadyCSS","prepareTemplate","styleElement","shadowRoot","appendChild","content","cloneNode","define","this","is","prop","hasOwnProperty","value","name","val","hasAttribute","setAttribute","Math","random","toString","substr","evt","keyCode","Down","Left","Right","Space","Up","preventDefault","HTMLElement","DSBusyElement","$upgradeProperty","Boolean","dispatchEvent","CustomEvent","removeAttribute","DSDisclosureElement","$defaultAttribute","target","expanded","addEventListener","_toggle","$preventScroll","_keyUp","removeEventListener","attr","oldVal","newVal","open","Enter","disabled","getAttribute","_target","targetId","document","getElementById","DSIconElement","type","Icons","_render","innerHTML","elSurrogate","createElement","firstElementChild","_tagName","_template","DSProgressElement","$fill","_this","Number","attrName","_value","normVal","round","style","width","DSRevealElement","DSTabElement","current","DSTabcontentElement","DSTablistElement","DSTabpanelElement","hasValue","DSTabsetElement","$tablist","querySelector","_onKeyUp","bind","_onTabClick","_setupIds","currentTab","tabs","forEach","tab","_this2","_this3","isNaN","length","focus","tabSide","_selectNext","_selectPrevious","indexOf","idx","tabpanel","_this4","tabpanels","tabId","$generateId","tabpanelId","_currentTab","TypeError","RangeError","tabIdx","blur","panelIdx","Array","from","querySelectorAll","elements","$define","Segno","VERSION","WebComponents","initialize"],"mappings":"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"}