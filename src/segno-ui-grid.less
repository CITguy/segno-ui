// ========== VARS ==========
@grid-column-count: 12; // Number of columns in the grid
@grid-gutter-size: 1rem; // Padding between columns
@grid-column-unit: (100% / @grid-column-count);
// Breakpoints
/*
  - 1em is calculated on browser-defined font size
    - No CSS property can affect this calculation.
  - As font size increases/decreases (zoom %), more/less room is available,
    so breakpoints behave more like larger/smaller screens
*/
@grid-break-wrist: 0em;
@grid-break-palm: 40em; // ~640px
@grid-break-lap: 64em; // ~1024px
@grid-break-desk: 75em; // ~1200px
@grid-break-wall: 90em; // ~1440px


// ========== MIXINS ==========
#grid {
  .row {
    display: flex;
    flex-wrap: wrap;
  }

  .col {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    margin: 0;
  }

  .span(@n) {
    @basis: (@n * @grid-column-unit);
    flex: 0 0 @basis;
    max-width: @basis;
  }

  .offset(@n) {
    margin-left: (@n * @grid-column-unit) !important;
  }
}//#grid

// TODO: move to Fanfare mixins
#space {
  .container {
    .xs {
      padding: 0.25rem;
    }
    .sm {
      padding: 0.5rem;
    }
    .md {
      padding: 1rem;
    }
    .lg {
      padding: 1.5rem;
    }
    .xl {
      padding: 2rem;
    }
  }
}//#space

.make-spans (@breakpoint, @n) when (@n > 0) and (@breakpoint = xs) {
  .dsCol-@{n},
  .dsCol-@{n}-@{breakpoint} {
    #grid.span(@n);
  }
  .make-spans(@breakpoint, (@n - 1));
}
.make-spans (@breakpoint, @n) when (@n > 0) and not (@breakpoint = xs) {
  .dsCol-@{n}-@{breakpoint} {
    #grid.span(@n);
  }
  .make-spans(@breakpoint, (@n - 1));
}

.make-offsets (@breakpoint, @n) when (@n >= 0) and (@breakpoint = xs) {
  .dsOffset-@{n},
  .dsOffset-@{n}-@{breakpoint} {
    #grid.offset(@n);
  }
  .make-offsets(@breakpoint, (@n - 1));
}
.make-offsets (@breakpoint, @n) when (@n >= 0) and not (@breakpoint = xs) {
  .dsOffset-@{n}-@{breakpoint} {
    #grid.offset(@n);
  }
  .make-offsets(@breakpoint, (@n - 1));
}

.make-orders (@breakpoint, @n) when (@n > 0) and (@breakpoint = xs) {
  .dsOrder-@{n},
  .dsOrder-@{n}-@{breakpoint} {
    order: @n;
  }
  .make-orders(@breakpoint, (@n - 1));
}
.make-orders (@breakpoint, @n) when (@n > 0) and not (@breakpoint = xs) {
  .dsOrder-@{n}-@{breakpoint} {
    order: @n;
  }
  .make-orders(@breakpoint, (@n - 1));
}

.make-grid (@breakpoint) {
  // 1 to N
  .make-spans(@breakpoint, @grid-column-count);
  // 0 to N
  .make-offsets(@breakpoint, @grid-column-count);
  // 1 to N
  .make-orders(@breakpoint, @grid-column-count);

  .dsHide-@{breakpoint} {
    display: none;
  }
}
// ========== END:MIXINS ==========


/* Cross-Browser Compatible:
   - IE11+
   - Chrome 43+
   - Opera 30+
   - Firefox 41+
   - Safari 9+
   - Edge
*/

// Arranges Horizontally
.dsRow {
  #grid.row;

  &:only-child {
    flex-grow: 1;
    height: 100%;
  }
}

// Arranges Vertically
.dsCol {
  #grid.col;
}

@media (min-width: @grid-break-wrist) {
  .make-grid(xs);
}

@media (min-width: @grid-break-palm) {
  .dsHide-xs { display: unset; }
  .make-grid(sm);
}

@media (min-width: @grid-break-lap) {
  .dsHide-sm { display: unset; }
  .make-grid(md);
}

@media (min-width: @grid-break-desk) {
  .dsHide-md { display: unset; }
  .make-grid(lg);
}

@media (min-width: @grid-break-wall) {
  .dsHide-lg { display: unset; }
  .make-grid(xl);
}

// TODO: break out spacing into DOCS
/*
  CONTAINER: 20px padding
  CONTENT:
    <p>: 1.5 * line-height = 1.5 * 1.25 = 1.875 = 2em (rounded up)
    <section>: follow <p>
    list items:
      <li>: 4px / 0.25rem;
      <dt>:
        vertical list:
          Y: 0.25em
        horizontal list:
          Y:8px
      <dd>:
        vertical list:
          Y: 0.5em
          X-left: 1em
        horizontal list:
          Y: 0.5em
          X: 0.5em
*/

// Spacing
// TODO: Move to Fanfare
// TODO: rename to .dsBox
.dsContainer {
  &:only-child {
    height: 100%;
    width: 100%;
  }

  &-xs {
    #space.container.xs;
  }

  &-sm {
    #space.container.sm;
  }

  &,
  &-md {
    #space.container.md;
  }

  &-lg {
    #space.container.lg;
  }

  &-xl {
    #space.container.xl;
  }
}
